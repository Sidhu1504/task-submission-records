#!/bin/bash

# === HELPER FUNCTIONS ===
function check_or_install_git() {
  if ! command -v git &> /dev/null; then
    echo "[+] Installing git..."
    sudo apt update && sudo apt install git -y
  else
    echo "[+] Git is already installed."
  fi
}

function check_or_install_gh() {
  if ! command -v gh &> /dev/null; then
    echo "[+] Installing GitHub CLI (gh)..."
    sudo apt update && sudo apt install gh -y
  else
    echo "[+] GitHub CLI (gh) is already installed."
  fi
}

function check_git_config() {
  GIT_USER_NAME=$(git config --global user.name)
  GIT_USER_EMAIL=$(git config --global user.email)

  if [ -z "$GIT_USER_NAME" ]; then
    read -p "Enter your Git user name: " input_name
    git config --global user.name "$input_name"
  fi

  if [ -z "$GIT_USER_EMAIL" ]; then
    read -p "Enter your Git email: " input_email
    git config --global user.email "$input_email"
  fi
}

function check_gh_auth() {
  if ! gh auth status &>/dev/null; then
    echo "[+] GitHub CLI not authenticated. Starting login..."
    gh auth login
  else
    echo "[+] GitHub CLI is already authenticated."
  fi
}

# === INITIAL SETUP ===
check_or_install_git
check_or_install_gh
check_git_config
check_gh_auth

# === CONFIGURATION ===
MAIN_REPO="sidhu1504/task-submission-records"
CSV_FILE="task_status.csv"
CLONE_DIR="student-task-repo"

# === STUDENT INPUT ===
read -p "Enter your full name: " STUDENT_NAME
read -p "Enter your course name: " COURSE_NAME
read -p "Enter task number: " TASK_NO
read -p "Enter task name: " TASK_NAME
read -p "Enter your GitHub username: " GITHUB_USERNAME

# === CREATE CLONE DIRECTORY IF NEEDED ===
if [ ! -d "$CLONE_DIR" ]; then
  echo "[+] Cloning your fork..."
  gh repo fork "$MAIN_REPO" --clone "$CLONE_DIR" --remote
else
  echo "[+] Clone directory already exists: $CLONE_DIR"
fi

cd "$CLONE_DIR" || exit

# === SET REMOTES ===
git remote set-url origin "https://github.com/${GITHUB_USERNAME}/task-submission-records.git"
if ! git remote | grep -q upstream; then
    git remote add upstream "https://github.com/${MAIN_REPO}.git"
fi

# === SYNC MAIN ===
git fetch upstream
git checkout main
git reset --hard upstream/main
git push origin main --force

# === CREATE BRANCH ===
BRANCH="task-${TASK_NO}-${STUDENT_NAME// /-}"
git checkout -b "$BRANCH"

# === APPEND CSV RECORD ===
if [ ! -f "$CSV_FILE" ]; then
    echo "Task No,Task Name,Student Name,Date Time,Status,Course Name" > "$CSV_FILE"
fi

DATE_TIME=$(date "+%Y-%m-%d %H:%M:%S")
TASK_STATUS="Complete"
echo "$TASK_NO,$TASK_NAME,$STUDENT_NAME,$DATE_TIME,$TASK_STATUS,$COURSE_NAME" >> "$CSV_FILE"

# === COMMIT & PUSH ===
git add "$CSV_FILE"
git commit -m "Task $TASK_NO completed by $STUDENT_NAME"
git push -u origin "$BRANCH"

# === CHECK COMMITS BEFORE PR ===
if git log origin/main..HEAD | grep .; then
  gh pr create \
    --title "Task $TASK_NO Completed by $STUDENT_NAME" \
    --body "Auto-submitted task from student script." \
    --base main \
    --head "${GITHUB_USERNAME}:${BRANCH}" \
    --repo "$MAIN_REPO"

  if [ $? -eq 0 ]; then
    echo -e "\n✅ Pull Request created successfully!"
  else
    echo -e "\n❌ Pull Request creation failed. Please check the error above."
  fi
else
  echo -e "\n⚠ No changes detected between main and your branch. PR not created."
fi
